package practica9.ui;

import practica9.model.SQLRepository;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

public class DataFrame extends JFrame {
    
    private final SQLRepository repository;
    private final DefaultListModel<String> tablesModel;
    private final DefaultListModel<String> fieldsModel;
    private final Map<String,List<String>> fieldsMap;

    public DataFrame(SQLRepository repository) throws SQLException{
        this.fieldsModel = new DefaultListModel<>();
        this.tablesModel = new DefaultListModel<>();
        this.fieldsMap = new HashMap<>();
        this.repository = repository;
        initComponents();
        addListener();
        tablesList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        fieldsList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        fillTableList();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectionToggleGroup = new javax.swing.ButtonGroup();
        tablesPane = new javax.swing.JScrollPane();
        tablesList = new javax.swing.JList<>();
        selectionTypePane = new javax.swing.JPanel();
        singleButton = new javax.swing.JToggleButton();
        intervalButton = new javax.swing.JToggleButton();
        freeButton = new javax.swing.JToggleButton();
        unselectButton = new javax.swing.JButton();
        menusSeparator = new javax.swing.JSeparator();
        titleLabel = new javax.swing.JLabel();
        fieldsPane = new javax.swing.JScrollPane();
        fieldsList = new javax.swing.JList<>();
        nameLabel1 = new javax.swing.JLabel();
        nameLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Datos");
        setResizable(false);

        tablesList.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.MatteBorder(null), "Tablas"));
        tablesList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        tablesList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                tablesListValueChanged(evt);
            }
        });
        tablesPane.setViewportView(tablesList);

        selectionTypePane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        selectionToggleGroup.add(singleButton);
        singleButton.setSelected(true);
        singleButton.setText("Individual");
        singleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singleButtonActionPerformed(evt);
            }
        });

        selectionToggleGroup.add(intervalButton);
        intervalButton.setText("Intervalos");
        intervalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intervalButtonActionPerformed(evt);
            }
        });

        selectionToggleGroup.add(freeButton);
        freeButton.setText("Libre");
        freeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freeButtonActionPerformed(evt);
            }
        });

        unselectButton.setText("Quitar seleccion");
        unselectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unselectButtonActionPerformed(evt);
            }
        });

        titleLabel.setText("Tipo de selección");

        javax.swing.GroupLayout selectionTypePaneLayout = new javax.swing.GroupLayout(selectionTypePane);
        selectionTypePane.setLayout(selectionTypePaneLayout);
        selectionTypePaneLayout.setHorizontalGroup(
            selectionTypePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menusSeparator, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(selectionTypePaneLayout.createSequentialGroup()
                .addGroup(selectionTypePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(selectionTypePaneLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(unselectButton))
                    .addGroup(selectionTypePaneLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(selectionTypePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(selectionTypePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(intervalButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(singleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(freeButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(selectionTypePaneLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(titleLabel)))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        selectionTypePaneLayout.setVerticalGroup(
            selectionTypePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectionTypePaneLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(singleButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(intervalButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(freeButton)
                .addGap(18, 18, 18)
                .addComponent(menusSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(unselectButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        fieldsList.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.MatteBorder(null), "Campos"));
        fieldsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        fieldsPane.setViewportView(fieldsList);

        nameLabel1.setText("Víctor Herrera Delgado");

        nameLabel2.setText("Miguel Herrera Álvarez");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(selectionTypePane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLabel1)
                            .addComponent(nameLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tablesPane, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fieldsPane, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(fieldsPane)
                        .addComponent(tablesPane, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(selectionTypePane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(nameLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tablesListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_tablesListValueChanged
        fieldsModel.clear();
        int selectedTables[]= tablesList.getSelectedIndices();
        for (int i = 0; i < selectedTables.length;i++){
            String table = tablesModel.get(selectedTables[i]);
            fieldsMap.get(table).forEach((field) -> {
                fieldsModel.addElement(field);
            });
        }
    }//GEN-LAST:event_tablesListValueChanged

    private void unselectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unselectButtonActionPerformed
        tablesList.clearSelection();
    }//GEN-LAST:event_unselectButtonActionPerformed

    private void freeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freeButtonActionPerformed
        tablesList.clearSelection();
        tablesList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
    }//GEN-LAST:event_freeButtonActionPerformed

    private void intervalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intervalButtonActionPerformed
        tablesList.clearSelection();
        tablesList.setSelectionMode(ListSelectionModel.SINGLE_INTERVAL_SELECTION);
    }//GEN-LAST:event_intervalButtonActionPerformed

    private void singleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singleButtonActionPerformed
        tablesList.clearSelection();
        tablesList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }//GEN-LAST:event_singleButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> fieldsList;
    private javax.swing.JScrollPane fieldsPane;
    private javax.swing.JToggleButton freeButton;
    private javax.swing.JToggleButton intervalButton;
    private javax.swing.JSeparator menusSeparator;
    private javax.swing.JLabel nameLabel1;
    private javax.swing.JLabel nameLabel2;
    private javax.swing.ButtonGroup selectionToggleGroup;
    private javax.swing.JPanel selectionTypePane;
    private javax.swing.JToggleButton singleButton;
    private javax.swing.JList<String> tablesList;
    private javax.swing.JScrollPane tablesPane;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JButton unselectButton;
    // End of variables declaration//GEN-END:variables

    private void closeDialog(){
        int res =JOptionPane.showConfirmDialog(null,
                "¿Está seguro de que quiere salir de la aplicación?",
                "Salir",JOptionPane.YES_NO_OPTION);
        if(res==JOptionPane.YES_OPTION){
            System.exit(0);
        }
    }

    private void fillTableList() throws SQLException {
        fieldsMap.putAll(repository.getTablesFields());
        for (String table : repository.getTableList()) 
            tablesModel.addElement(table);
        tablesList.setModel(tablesModel);
        fieldsList.setModel(fieldsModel);
        repository.connectionClose();
    }

    private void addListener() {
        addWindowListener(new WindowAdapter(){
            @Override
            public void windowClosing(WindowEvent e){
                closeDialog();
            }
        });
    }
    
}
